{"version":3,"file":"static/js/135.261128de.chunk.js","mappings":"+SAOO,SAAeA,EAAtB,iDAAO,OAAP,oBAAO,WAAkCC,EAASC,GAA3C,uFACkBC,EAAAA,EAAAA,IAAA,yBAA4BF,GAAW,CAC5DG,OAAQF,IAFL,cACCG,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAA6BC,EAAIN,GAAjC,uFACkBC,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,mBAAwC,CAC7DJ,OAAQF,IAFL,cACCG,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeG,EAAtB,iDAAO,OAAP,oBAAO,WAAiCD,EAAIN,GAArC,uFACkBC,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,2BAAgD,CACrEJ,OAAQF,IAFL,cACCG,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeI,EAAtB,iDAAO,OAAP,oBAAO,WAAoCF,EAAIN,GAAxC,uFACkBC,EAAAA,EAAAA,IAAA,gBACZK,EADY,kCAErB,CAAEJ,OAAQF,IAHP,cACCG,EADD,yBAKEA,EAASC,MALX,kEAOA,SAAeK,EAAtB,iDAAO,OAAP,oBAAO,WAAgCC,EAAaV,GAA7C,uFACkBC,EAAAA,EAAAA,IAAA,gEACoCS,GACzD,CAAER,OAAQF,IAHP,cACCG,EADD,yBAKEA,EAASC,MALX,kEAjCPH,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBU,QAAS,mC,mGCDEC,EAAOC,EAAAA,GAAAA,GAAH,8MAeJC,GAAYD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,8E,SCfTG,EAAY,SAAC,GAAkB,IAAhBV,EAAe,EAAfA,GAAIW,EAAW,EAAXA,KACtBC,GAAWC,EAAAA,EAAAA,MACjB,OACM,SAACP,EAAD,WACE,SAACE,EAAD,CAAWM,GAAE,kBAAad,GAAMe,MAAO,CAAEC,KAAMJ,GAA/C,SAA4DD,KAGrE,ECRUM,EAAOV,EAAAA,GAAAA,GAAH,6DCCJW,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACjC,OACE,gCACGA,GACH,SAACH,EAAD,UACGE,EAAME,KAAI,gBAAGrB,EAAH,EAAGA,GAAIsB,EAAP,EAAOA,MAAP,OACT,SAACZ,EAAD,CAAoBV,GAAIA,EAAIW,KAAMW,GAAlBtB,EADP,QAMhB,C,4JCZYuB,EAAmBhB,EAAAA,GAAAA,IAAH,4CAIhBiB,EAAQjB,EAAAA,GAAAA,GAAH,2F,SCFLkB,EAAU,SAAC,GAAuB,IAAtBN,EAAqB,EAArBA,MAAOO,EAAc,EAAdA,QAC5B,OACI,SAACH,EAAD,UACKG,GAAU,SAACC,EAAA,EAAD,KAAY,SAACT,EAAA,EAAD,CAAWC,MAAOA,EAAlB,UACnB,SAACK,EAAD,iCAIf,E,SCPc,SAASI,IACpB,OAA0CC,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAwBA,OArBAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAa,IAAIC,gBACjBC,EAAgB,mCAAG,oGAEjBJ,GAAa,GAFI,UAGMzC,EAAAA,EAAAA,IAAmB,MAAO2C,EAAWvC,QAH3C,OAGX0C,EAHW,OAIjBP,EAAiBO,EAASC,SAJT,gDAMjBC,QAAQC,IAAR,MANiB,yBAQjBR,GAAa,GARI,4EAAH,qDAarB,OAFAI,IAEO,kBAAMF,EAAWO,OAAjB,CACX,GAAE,KAMC,SAACjB,EAAD,CAASN,MAAOW,EAAeJ,QAASM,GAE/C,C","sources":["API/Api.js","components/MovieItem/MovieItem.styled.js","components/MovieItem/MovieItem.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: '388b8c32f7164678f9c3582a41e277c5',\n};\n\nexport async function fetchTrendingFilms(request, object) {\n  const response = await axios.get(`trending/movie/${request}`, {\n    signal: object,\n  });\n  return response.data;\n}\n\nexport async function fetchFilmById(id, object) {\n  const response = await axios.get(`movie/${id}?language=en-US`, {\n    signal: object,\n  });\n  return response.data;\n}\n\nexport async function fetchCastFilmById(id, object) {\n  const response = await axios.get(`movie/${id}/credits?language=en-US`, {\n    signal: object,\n  });\n  return response.data;\n}\n\nexport async function fetchReviewsFilmById(id, object) {\n  const response = await axios.get(\n    `movie/${id}/reviews?language=en-US&page=1`,\n    { signal: object }\n  );\n  return response.data;\n}\nexport async function fetchSearchMovie(SearchQuery, object) {\n  const response = await axios.get(\n    `search/movie?language=en-US&include_adult=false&query=${SearchQuery}`,\n    { signal: object }\n  );\n  return response.data;\n}\n","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const Item = styled.li`\n    font-size: 17px;\n    font-weight: 400;\n    color: #f5f5f5;\n    \n\n    :not(:last-child){\n        margin-bottom: 5px;\n    }\n\n    :hover {\n        color: #ed9547;\n    }\n`\n\nexport const MovieLink = styled(Link)`\n    color: currentColor;\n    text-decoration: none;\n`\n\n","import { useLocation } from \"react-router-dom\";\nimport { MovieLink, Item } from \"./MovieItem.styled\";\n\nexport const MovieItem = ({ id, name }) => {\n    const location = useLocation()\n    return (\n          <Item>\n            <MovieLink to={`/movies/${id}`} state={{ from: location }}>{name}</MovieLink>\n          </Item>\n        )\n  };\n  ","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n    margin: 0;\n    color: #f5f5f5;\n`","import { MovieItem } from 'components/MovieItem/MovieItem';\nimport { List } from './MovieList.styled';\n\nexport const MovieList = ({ films, children }) => {\n  return (\n    <>\n      {children}\n    <List>\n      {films.map(({ id, title }) => (\n        <MovieItem key={id} id={id} name={title}/>\n      ))}\n    </List>\n    </>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const SectionContainer = styled.div`\n    width: 1200px;\n`\n\nexport const Title = styled.h1`\n    color: #f5f5f5;\n    margin-top: 0;\n    margin-bottom: 20px;\n`","import { Loader } from \"components/Loader/Loader\"\nimport { MovieList } from \"components/MovieList/MovieList\"\nimport { SectionContainer, Title } from \"./Section.styled\"\n\nexport const Section = ({films, loading }) => {\n    return (\n        <SectionContainer>\n            {loading ? <Loader/> : <MovieList films={films}>\n                <Title>Trending today:</Title>\n        </MovieList>}\n        </SectionContainer>\n    )\n}","import { fetchTrendingFilms } from \"API/Api\";\nimport { Section } from \"components/Section/Section\";\nimport { useEffect, useState } from \"react\";\n\n\nexport default function Home() {\n    const [trendingFilms, setTrendingFilms] = useState([])\n    const [isLoading, setIsLoading] = useState(false)\n\n\n    useEffect(() => {\n        const controller = new AbortController();\n        const getTrendingFilms = async () =>  {\n            try {\n                setIsLoading(true)\n                const arrFilms = await fetchTrendingFilms('day', controller.signal)\n                setTrendingFilms(arrFilms.results)\n            } catch(error) {\n                console.log(error)\n            }  finally {\n                setIsLoading(false)\n            }\n         }\n         getTrendingFilms()\n         \n         return () => controller.abort()\n    }, [])\n\n\n\n\n    return(\n        <Section films={trendingFilms} loading={isLoading}></Section>\n    )\n}"],"names":["fetchTrendingFilms","request","object","axios","signal","response","data","fetchFilmById","id","fetchCastFilmById","fetchReviewsFilmById","fetchSearchMovie","SearchQuery","api_key","Item","styled","MovieLink","Link","MovieItem","name","location","useLocation","to","state","from","List","MovieList","films","children","map","title","SectionContainer","Title","Section","loading","Loader","Home","useState","trendingFilms","setTrendingFilms","isLoading","setIsLoading","useEffect","controller","AbortController","getTrendingFilms","arrFilms","results","console","log","abort"],"sourceRoot":""}