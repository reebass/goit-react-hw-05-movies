{"version":3,"file":"static/js/549.73b6244a.chunk.js","mappings":"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","sources":["API/Api.js","components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: '388b8c32f7164678f9c3582a41e277c5',\n};\n\nexport async function fetchTrendingFilms(request, object) {\n  const response = await axios.get(`trending/movie/${request}`, {\n    signal: object,\n  });\n  return response.data;\n}\n\nexport async function fetchFilmById(id, object) {\n  const response = await axios.get(`movie/${id}?language=en-US`, {\n    signal: object,\n  });\n  return response.data;\n}\n\nexport async function fetchCastFilmById(id, object) {\n  const response = await axios.get(`movie/${id}/credits?language=en-US`, {\n    signal: object,\n  });\n  return response.data;\n}\n\nexport async function fetchReviewsFilmById(id, object) {\n  const response = await axios.get(\n    `movie/${id}/reviews?language=en-US&page=1`,\n    { signal: object }\n  );\n  return response.data;\n}\nexport async function fetchSearchMovie(SearchQuery, object) {\n  const response = await axios.get(\n    `search/movie?language=en-US&include_adult=false&query=${SearchQuery}`,\n    { signal: object }\n  );\n  return response.data;\n}\n","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const ContainerInfo = styled.div`\n    background-color: #f5f5f5;\n    margin: 20px 0;\n`\n\nexport const ContainerMainInfo = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    gap: 50px;\n    margin-bottom: 15px;\n`\n\nexport const Image = styled.img`\n    display: block;\n    width: 250px;\n    height: 350px;\n    object-fit: cover;\n    margin: 0;\n`\n\nexport const MainInfoRightSide = styled.div`\n    padding: 20px;\n    border: 1px solid #123c4a;\n    border-radius: 10px; \n    margin-right: 40px;\n    color: #123c4a;\n`\n\nexport const Title = styled.h1`\n    margin-top: 0;\n    margin-bottom: 30px;\n` \n\nexport const UserScore = styled.p`\n    font-size: 18px;\n    margin-top: 0;\n    margin-bottom: 20px;\n\n    & > span {\n        font-size: 20px;\n        font-weight: 600;\n        margin-right: 10px;\n    }\n`\n\nexport const TextWrap = styled.div`\n    margin-bottom: 20px;\n`\n\nexport const Subtitle = styled.h3`\n    font-size: 20px;\n    margin-top: 0;\n    margin-bottom: 5px;\n`\n\nexport const Text = styled.p`\n    font-size: 16px;\n    margin: 0;\n`\n\n\n\n\n\n\nexport const ContaiterAdditionalInfo = styled.div`\n    display:block;\n`\n\nexport const AdditionalInfoLinkWrap = styled.div`\n    width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\nexport const AdditionalInfoLink = styled(Link)`\nflex-basis: 50%;\n  height: 100%;\n  margin: 0;\n  padding: 10px 15px;\n\n  font-size: 24px;\n  text-align: center;\n  text-transform: uppercase;\n  font-weight: 600;\n  text-decoration: none;\n  color: #123c4a;\n  border: 1px solid #123c4a;\n\n  transition: color 300ms ease, background-color 300ms ease;\n\n\n  &:hover, :focus {\n    background-color: #ed9547;\n    color: #f5f5f5;\n  }\n\n  :first-child {\n    border-right: 0;\n  }\n`\n\n","import { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { AdditionalInfoLink, AdditionalInfoLinkWrap, ContainerInfo, ContainerMainInfo, ContaiterAdditionalInfo, Image, MainInfoRightSide, Subtitle, Text, TextWrap, Title, UserScore } from './MovieInfo.styled';\n\nexport const MovieInfo = ({ movieDetails }) => {\n  const {\n    poster_path,\n    original_title,\n    release_date,\n    overview,\n    genres,\n    vote_average,\n  } = movieDetails;\n\n  const poster = poster_path\n    ? `https://image.tmdb.org/t/p/w400/${poster_path}`\n    : 'https://bflix.biz/no-poster.png';\n  const releaseYear = release_date?.slice(0, 4);\n  const userScore = Math.round(vote_average * 10);\n  const genresString = genres?.map(({ name }) => name).join(', ');\n\n  return (\n    <>\n      {movieDetails && (\n        <ContainerInfo>\n          <ContainerMainInfo>\n          <Image src={poster} alt=\"\" />\n          <MainInfoRightSide>\n            <Title>\n              {original_title} {releaseYear ? `(${releaseYear})` : ''}\n            </Title>\n            {userScore !== 0 && <UserScore><span>User Score:</span>{userScore}%</UserScore>}\n            {overview && (\n              <TextWrap>\n                <Subtitle>Overview</Subtitle>\n                <Text>{overview}</Text>\n              </TextWrap>\n            )}\n            {genresString && (\n              <div>\n                <Subtitle>Ganres</Subtitle>\n                <Text>{genresString}</Text>\n              </div>\n            )}\n          </MainInfoRightSide>\n          </ContainerMainInfo>\n          <ContaiterAdditionalInfo>\n            <AdditionalInfoLinkWrap>\n            <AdditionalInfoLink to=\"cast\">Cast</AdditionalInfoLink>\n            <AdditionalInfoLink to=\"reviews\">Reviews</AdditionalInfoLink>\n            </AdditionalInfoLinkWrap>\n            <Suspense fallback={<div>Loading page...</div>}>\n              <Outlet />\n            </Suspense>\n          </ContaiterAdditionalInfo>\n          \n        </ContainerInfo>\n      )}\n    </>\n  );\n};\n","import { useState, useEffect, useRef } from 'react';\nimport { fetchFilmById } from 'API/Api';\nimport { Link, useLocation, useParams } from 'react-router-dom';\nimport { MovieInfo } from 'components/MovieInfo/MovieInfo';\nimport { Loader } from 'components/Loader/Loader';\nimport styled from 'styled-components';\nimport {BsFillArrowLeftCircleFill} from 'react-icons/bs'\n\n\n\nexport default function MovieDetails () {\n  const [movieDetails, setMovieDetails] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  const backlinkRef = useRef(backLinkHref);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const getMovieById = async () => {\n      try {\n        setIsLoading(true);\n        const resp = await fetchFilmById(movieId, controller.signal);\n        setMovieDetails(resp);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovieById();\n    return () => controller.abort()\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          <BackLink to={backlinkRef.current}>\n            <BsFillArrowLeftCircleFill/>\n            Go Back</BackLink>\n          <MovieInfo movieDetails={movieDetails} />\n        </>\n      )}\n    </>\n  );\n};\n\n\nconst BackLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n  width: 130px;\n  margin: 0;\n  padding: 5px;\n\n  background-color: #f5f5f5;\n  color: #123c4a;\n  text-decoration: none;\n  font-size: 16px;\n  font-weight: 600;\n  text-transform: uppercase;\n  text-align: center;\n  border-radius: 10px;\n\n  transition: color 300ms ease, background-color 300ms ease;\n\n  :hover {\n    background-color: #ed9547;\n  color: #f5f5f5;\n  }\n\n`\n"],"names":["fetchTrendingFilms","request","object","axios","signal","response","data","fetchFilmById","id","fetchCastFilmById","fetchReviewsFilmById","fetchSearchMovie","SearchQuery","api_key","ContainerInfo","styled","ContainerMainInfo","Image","MainInfoRightSide","Title","UserScore","TextWrap","Subtitle","Text","ContaiterAdditionalInfo","AdditionalInfoLinkWrap","AdditionalInfoLink","Link","MovieInfo","movieDetails","poster_path","original_title","release_date","overview","genres","vote_average","poster","releaseYear","slice","userScore","Math","round","genresString","map","name","join","src","alt","to","Suspense","fallback","MovieDetails","useState","setMovieDetails","isLoading","setIsLoading","movieId","useParams","backLinkHref","useLocation","state","from","backlinkRef","useRef","useEffect","controller","AbortController","getMovieById","resp","console","log","abort","Loader","BackLink","current"],"sourceRoot":""}