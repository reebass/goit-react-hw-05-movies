{"version":3,"file":"static/js/779.4568b83c.chunk.js","mappings":"+SAOO,SAAeA,EAAtB,iDAAO,OAAP,oBAAO,WAAkCC,EAASC,GAA3C,uFACkBC,EAAAA,EAAAA,IAAA,yBAA4BF,GAAW,CAC5DG,OAAQF,IAFL,cACCG,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAA6BC,EAAIN,GAAjC,uFACkBC,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,mBAAwC,CAC7DJ,OAAQF,IAFL,cACCG,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeG,EAAtB,iDAAO,OAAP,oBAAO,WAAiCD,EAAIN,GAArC,uFACkBC,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,2BAAgD,CACrEJ,OAAQF,IAFL,cACCG,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeI,EAAtB,iDAAO,OAAP,oBAAO,WAAoCF,EAAIN,GAAxC,uFACkBC,EAAAA,EAAAA,IAAA,gBACZK,EADY,kCAErB,CAAEJ,OAAQF,IAHP,cACCG,EADD,yBAKEA,EAASC,MALX,kEAOA,SAAeK,EAAtB,iDAAO,OAAP,oBAAO,WAAgCC,EAAaV,GAA7C,uFACkBC,EAAAA,EAAAA,IAAA,gEACoCS,GACzD,CAAER,OAAQF,IAHP,cACCG,EADD,yBAKEA,EAASC,MALX,kEAjCPH,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBU,QAAS,mC,yKCFEC,EAAOC,EAAAA,GAAAA,GAAH,wOAaJC,EAAOD,EAAAA,GAAAA,GAAH,sIASJE,EAAQF,EAAAA,GAAAA,GAAH,yNAaLG,EAAOH,EAAAA,GAAAA,EAAH,8D,SC9BF,SAASI,IACtB,OAA0CC,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBACjBC,EAAkB,mCAAG,WAAML,GAAN,uFAEvBD,GAAa,GAFU,UAGJd,EAAAA,EAAAA,IAAqBe,EAASG,EAAWxB,QAHrC,OAGjB2B,EAHiB,OAIvBT,EAAiBU,EAAqBD,EAAKE,UAJpB,gDAMvBC,QAAQC,IAAR,MANuB,yBAQvBX,GAAa,GARU,4EAAH,sDAaxB,OAFAM,EAAmBL,GAEZ,kBAAMG,EAAWQ,OAAjB,CACR,GAAE,CAACX,IAEJ,IAAMO,EAAuB,SAAAK,GAC3B,OAAOA,EACJC,KAAI,YACH,MAAO,CAAEC,OADmC,EAAtCA,OACWC,QAD2B,EAA9BA,QACYhC,GADkB,EAArBA,GACOiC,WADc,EAAjBA,WAE5B,IACAC,MACC,SAACC,EAAcC,GAAf,OACEC,KAAKC,MAAMF,EAAcH,YACzBI,KAAKC,MAAMH,EAAaF,WAF1B,GAIL,EAED,OACE,8BACGlB,GACC,SAACwB,EAAA,EAAD,KAEA,SAACjC,EAAD,UAC4B,IAAzBO,EAAc2B,OACb3B,EAAciB,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAShC,EAApB,EAAoBA,GAApB,OAChB,UAACQ,EAAD,YACE,UAACC,EAAD,sBAAc,0BAAOsB,QACrB,SAACrB,EAAD,UAAOsB,MAFEhC,EADK,KAKb,SAACQ,EAAD,WAAM,SAACE,EAAD,6CAKtB,C","sources":["API/Api.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: '388b8c32f7164678f9c3582a41e277c5',\n};\n\nexport async function fetchTrendingFilms(request, object) {\n  const response = await axios.get(`trending/movie/${request}`, {\n    signal: object,\n  });\n  return response.data;\n}\n\nexport async function fetchFilmById(id, object) {\n  const response = await axios.get(`movie/${id}?language=en-US`, {\n    signal: object,\n  });\n  return response.data;\n}\n\nexport async function fetchCastFilmById(id, object) {\n  const response = await axios.get(`movie/${id}/credits?language=en-US`, {\n    signal: object,\n  });\n  return response.data;\n}\n\nexport async function fetchReviewsFilmById(id, object) {\n  const response = await axios.get(\n    `movie/${id}/reviews?language=en-US&page=1`,\n    { signal: object }\n  );\n  return response.data;\n}\nexport async function fetchSearchMovie(SearchQuery, object) {\n  const response = await axios.get(\n    `search/movie?language=en-US&include_adult=false&query=${SearchQuery}`,\n    { signal: object }\n  );\n  return response.data;\n}\n","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n    height: 400px;\n    overflow-y: scroll;\n    padding: 0;\n\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: flex-start;\n    \n    list-style: none;\n\n`\nexport const Item = styled.li`\n    width: 100%;\n    padding: 20px 20px;\n\n    :nth-child(2n) {\n        background-color: #e3e3e3;\n    }\n`\n\nexport const Title = styled.h3`\n    font-size: 20px;\n    margin: 0;\n    margin-bottom: 10px;\n    font-weight: 600;\n    & > span {\n        margin-left: 10px;\n        font-weight: 400;\n        font-size: 16px;\n    }\n\n`\n\nexport const Text = styled.p`\n    font-size: 14px;\n    margin: 0;\n`\n\n","import { fetchReviewsFilmById } from 'API/Api';\nimport { Loader } from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\n\nimport { useParams } from 'react-router-dom';\nimport { Item, List, Text, Title } from './Reviews.styled';\n\nexport default function Reviews(){\n  const [reviewsMovies, setReviewsMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const getReviewsFilmById = async movieId => {\n      try {\n        setIsLoading(true);\n        const resp = await fetchReviewsFilmById(movieId, controller.signal);\n        setReviewsMovies(selectKeysArrReviews(resp.results));\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getReviewsFilmById(movieId);\n\n    return () => controller.abort()\n  }, [movieId]);\n\n  const selectKeysArrReviews = arrReviews => {\n    return arrReviews\n      .map(({ author, content, id, created_at }) => {\n        return { author, content, id, created_at };\n      })\n      .sort(\n        (firstReviews, secondReviews) =>\n          Date.parse(secondReviews.created_at) -\n          Date.parse(firstReviews.created_at)\n      );\n  };\n\n  return (\n    <>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <List>\n          {reviewsMovies.length !== 0 ?\n            reviewsMovies.map(({ author, content, id }) => (\n              <Item key={id}>\n                <Title>Author:<span>{author}</span></Title>\n                <Text>{content}</Text>\n              </Item>\n            )) : <Item><Text>There are no reviews here</Text></Item>}\n        </List>\n      )}\n    </>\n  );\n};\n"],"names":["fetchTrendingFilms","request","object","axios","signal","response","data","fetchFilmById","id","fetchCastFilmById","fetchReviewsFilmById","fetchSearchMovie","SearchQuery","api_key","List","styled","Item","Title","Text","Reviews","useState","reviewsMovies","setReviewsMovies","isLoading","setIsLoading","movieId","useParams","useEffect","controller","AbortController","getReviewsFilmById","resp","selectKeysArrReviews","results","console","log","abort","arrReviews","map","author","content","created_at","sort","firstReviews","secondReviews","Date","parse","Loader","length"],"sourceRoot":""}